name: Test Workflow

on:
  push:
    paths: [ '.github/workflows/test.yml', 'CMakeLists.txt', 'src/**' ]
  pull_request:
    paths: [ '.github/workflows/test.yml', 'CMakeLists.txt', 'src/**' ]

jobs:
  test:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        generator: [ 'Ninja', 'Unix Makefiles' ]
        compiler: [ 'g++', 'clang++' ]
        exclude:
        - os: windows-latest
          generator: 'Unix Makefiles'
        - os: windows-latest
          compiler: clang++
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install APT packages.
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ncurses-dev cmake
    - name: Windows Choco Cache
      if: matrix.os == 'windows-latest'
      uses: actions/cache@v3
      with:
        key: choco
        path: ./.choco_cache
    - name: Windows Curses Cache
      id: curses-cache
      if: matrix.os == 'windows-latest'
      uses: actions/cache@v3
      with:
        key: curses-${{ matrix.os }}-${{ matrix.compiler }}
        path: |
          ./ncurses-6.1
    - name: Install Windows packages.
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y --limit-output --no-progress --cache .choco_cache/ make wget patch
        wget -q https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.1.tar.gz
        tar zxf ncurses-6.1.tar.gz
        cd ncurses-6.1
        echo "${{ steps.curses-cache.outputs.cache-hit }}"
        if [ "${{ steps.cache.outputs.cache-hit }}" != "true" ];
          # Patch Makefiles to prevent word splitting.
          find . -name Makefile.in -exec sed -i 's/$(SHELL)/"$(SHELL)"/' \{\} \;
          ./configure --without-pkg-config
        fi
        make -j2
      shell: sh
    - name: CMake Configure
      run: |
        cmake --version
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=TRUE -DCMAKE_BUILD_PARALLEL_LEVEL=2 -DCMAKE_VERBOSE_MAKEFILE=TRUE ..
      env:
        CXX: ${{ matrix.compiler }}
        GENERATOR: ${{ matrix.generator }}
      shell: sh
    - name: CMake Build
      run: |
        cd build
        cmake --build .
      shell: sh
    - name: CTest
      run: |
        cd build
        ctest -j2 -VV
      shell: sh
